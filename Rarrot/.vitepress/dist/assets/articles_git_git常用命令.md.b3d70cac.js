import{_ as t,o as e,c as i,R as p}from"./chunks/framework.9b35f1b8.js";const u=JSON.parse('{"title":"git常用命令","description":"","frontmatter":{},"headers":[],"relativePath":"articles/git/git常用命令.md","filePath":"articles/git/git常用命令.md","lastUpdated":null}'),a={name:"articles/git/git常用命令.md"},r=p('<h1 id="git常用命令" tabindex="-1">git常用命令 <a class="header-anchor" href="#git常用命令" aria-label="Permalink to &quot;git常用命令&quot;">​</a></h1><p><img src="https://cdn.staticaly.com/gh/hr1201/img@main/imgs/202308282113993.png" alt=""></p><p>Git 命令清单及个别专用名词的译名如下：</p><p>Workspace：工作区</p><p>Index / Stage：暂存区</p><p>Repository：仓库区（或本地仓库）</p><p>Remote：远程仓库</p><p>来自 &lt;<a href="https://m.php.cn/tool/git/464354.html" target="_blank" rel="noreferrer">https://m.php.cn/tool/git/464354.html</a>&gt;</p><p><strong>简易的命令行入门教程:</strong></p><p>Git 全局设置:</p><p>git config --global user.name &quot;hr121&quot; git config --global user.email &quot;<a href="mailto:568127468@qq.com" target="_blank" rel="noreferrer">568127468@qq.com</a>&quot;</p><p>创建 git 仓库:</p><p>mkdir myware cd myware git init touch README.md git add README.md git commit -m &quot;first commit&quot;</p><p>git remote add origin  <a href="https://gitee.com/hr121/myware.git" target="_blank" rel="noreferrer">https://gitee.com/hr121/myware.git</a></p><p>git push -u origin &quot;master&quot;</p><p>已有仓库?</p><p>cd existing_git_repo git remote add origin <a href="https://gitee.com/hr121/myware.git" target="_blank" rel="noreferrer">https://gitee.com/hr121/myware.git</a></p><p>git push -u origin &quot;master&quot;</p><p>来自 &lt;<a href="https://gitee.com/hr121/myware" target="_blank" rel="noreferrer">https://gitee.com/hr121/myware</a>&gt;</p><p>git pull origin master（仓库名）</p><p>创建分支用git branch+仓库名，显示本地所有分支git branch</p><p>切换分支用git checkout +仓库名</p><p>防止在我们提交前别人也已经作了修改,在上传前，先切换到主干分支,我们一般要先主干分支上的代码拉取下来,也就是git pull,</p><p>,之后再git checkout切换至开发分支(非主干分支),进行git merge master,与主干分支进行合并.再次切换至主干分支,进行代码的推送.</p><p>git log查看提交日志</p><p>git status查看当前仓库状态，即是否还有改动的但未提交的</p><p>git diff 查看文件被修改了什么</p><p>git revert HEAD撤回最后一次提交，生成一次新的提交，本地文件仍然存在</p><p>个人仓库imgs私人令牌：1ba19432e6764bd9b1c34eaa784a972f</p><p>遇到了: <a href="https://so.csdn.net/so/search?q=OpenSSL&amp;spm=1001.2101.3001.7020" target="_blank" rel="noreferrer">OpenSSL</a> SSL_read: Connection was reset, errno 10054</p><p>可使用git config --global http.sslVerify &quot;false&quot;</p><p>遇到了Failed to connect to github.com port 443: Timed out</p><p>使用命令</p><p>git config --global --unset http.proxy</p><p>git config --global --unset https.proxy</p><p>关于git出现此问题的解决办法：</p><p><img src="https://cdn.staticaly.com/gh/hr1201/img@main/imgs/image-20230115122353862.png" alt="image-20230115122353862"></p><p>使用<code>git pull --rebase origin master</code>远程文件拉到本地进行比较：</p><p><img src="https://cdn.staticaly.com/gh/hr1201/img@main/imgs/image-20230115122626836.png" alt="image-20230115122626836"></p><p>在本地解决冲突后，使用<code>git rebase --skip</code>进行跳过此阶段，之后在进行push，即可成功上传</p><p><img src="https://cdn.staticaly.com/gh/hr1201/img@main/imgs/image-20230115122858982.png" alt="image-20230115122858982"></p><p>最近还是会出现上述问题，解决方式：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git remote set-url origin git@github.com:hr1201/hr1201.github.io.git</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="https://cdn.staticaly.com/gh/hr1201/img@main/imgs/202307191107930.png" alt=""></p>',44),g=[r];function o(s,n,c,m,l,h){return e(),i("div",null,g)}const _=t(a,[["render",o]]);export{u as __pageData,_ as default};
