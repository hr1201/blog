import{_ as s,c as n,o as a,Q as l}from"./chunks/framework.7104966c.js";const A=JSON.parse('{"title":"任意类型","description":"","frontmatter":{},"headers":[],"relativePath":"articles/typescript/02-任意类型.md","filePath":"articles/typescript/02-任意类型.md","lastUpdated":1690860591000}'),p={name:"articles/typescript/02-任意类型.md"},o=l(`<h1 id="任意类型" tabindex="-1">任意类型 <a class="header-anchor" href="#任意类型" aria-label="Permalink to &quot;任意类型&quot;">​</a></h1><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// any 任意类型 unknown 不知道的类型</span></span>
<span class="line"><span style="color:#6A737D;">// 1.top type 顶级类型 any unknown</span></span>
<span class="line"><span style="color:#6A737D;">// 2.Object</span></span>
<span class="line"><span style="color:#6A737D;">// 3.Number String Boolean</span></span>
<span class="line"><span style="color:#6A737D;">// 4.number string boolean（小写）</span></span>
<span class="line"><span style="color:#6A737D;">// 5.  1   &#39;rarrot&#39;  false</span></span>
<span class="line"><span style="color:#6A737D;">// 6.never</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// unknown 只能赋值给自身 或者是any</span></span>
<span class="line"><span style="color:#6A737D;">// unknown 没有办法读任何属性 方法也不可以调用</span></span>
<span class="line"><span style="color:#6A737D;">// unknown 比any更加安全，当不知道定义属性为什么类型时，优先使用unknown</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> a</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">any</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> []</span></span>
<span class="line"><span style="color:#E1E4E8;">a </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">a </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;123&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">a </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#E1E4E8;">a </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Symbol</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> b</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">number</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">5</span></span>
<span class="line"><span style="color:#E1E4E8;">a </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> b</span></span>
<span class="line"><span style="color:#E1E4E8;">b </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> a</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> rarrot</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">any</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{牛逼:</span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span><span style="color:#B392F0;">open</span><span style="color:#E1E4E8;">:()</span><span style="color:#F97583;">=&gt;</span><span style="color:#79B8FF;">123</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">//上面any换成unknown，下面console语句会报错</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;🚀 ~ file: index.ts:23 ~ rarrot:&quot;</span><span style="color:#E1E4E8;">, rarrot.</span><span style="color:#B392F0;">open</span><span style="color:#E1E4E8;">())</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// any 任意类型 unknown 不知道的类型</span></span>
<span class="line"><span style="color:#6A737D;">// 1.top type 顶级类型 any unknown</span></span>
<span class="line"><span style="color:#6A737D;">// 2.Object</span></span>
<span class="line"><span style="color:#6A737D;">// 3.Number String Boolean</span></span>
<span class="line"><span style="color:#6A737D;">// 4.number string boolean（小写）</span></span>
<span class="line"><span style="color:#6A737D;">// 5.  1   &#39;rarrot&#39;  false</span></span>
<span class="line"><span style="color:#6A737D;">// 6.never</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// unknown 只能赋值给自身 或者是any</span></span>
<span class="line"><span style="color:#6A737D;">// unknown 没有办法读任何属性 方法也不可以调用</span></span>
<span class="line"><span style="color:#6A737D;">// unknown 比any更加安全，当不知道定义属性为什么类型时，优先使用unknown</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> a</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">any</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> []</span></span>
<span class="line"><span style="color:#24292E;">a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;123&#39;</span></span>
<span class="line"><span style="color:#24292E;">a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Symbol</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> b</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">number</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span></span>
<span class="line"><span style="color:#24292E;">a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> b</span></span>
<span class="line"><span style="color:#24292E;">b </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> a</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> rarrot</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">any</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{牛逼:</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span><span style="color:#6F42C1;">open</span><span style="color:#24292E;">:()</span><span style="color:#D73A49;">=&gt;</span><span style="color:#005CC5;">123</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">//上面any换成unknown，下面console语句会报错</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;🚀 ~ file: index.ts:23 ~ rarrot:&quot;</span><span style="color:#24292E;">, rarrot.</span><span style="color:#6F42C1;">open</span><span style="color:#24292E;">())</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h2 id="对象类型" tabindex="-1">对象类型 <a class="header-anchor" href="#对象类型" aria-label="Permalink to &quot;对象类型&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 大写object</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> a</span><span style="color:#F97583;">:</span><span style="color:#B392F0;">Object</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">123</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> a1</span><span style="color:#F97583;">:</span><span style="color:#B392F0;">Object</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;123&quot;</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> a2</span><span style="color:#F97583;">:</span><span style="color:#B392F0;">Object</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">[]</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> a3</span><span style="color:#F97583;">:</span><span style="color:#B392F0;">Object</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{}</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> a4</span><span style="color:#F97583;">:</span><span style="color:#B392F0;">Object</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 小写object，仅支持引用类型，</span></span>
<span class="line"><span style="color:#6A737D;">// 所以可以通过object将引用类型筛选出来，常用于泛型约束</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> a</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">object</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">123</span><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 报错，原始类型</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> a1</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">object</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;123&quot;</span><span style="color:#E1E4E8;">     </span><span style="color:#6A737D;">// 报错，原始类型</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> a2</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">object</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">     </span><span style="color:#6A737D;">// 报错，原始类型</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> a3</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">object</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">[]        </span><span style="color:#6A737D;">// 正确</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> a4</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">object</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{}        </span><span style="color:#6A737D;">// 正确</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">a5</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">object</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">123</span><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 正确</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 可以将{}理解为一个new Object，相当于原始类型</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> a</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> {} </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">123</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> a1</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> {} </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;123&quot;</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> a2</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> {} </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> []</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> a3</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> {} </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> { name: </span><span style="color:#9ECBFF;">&#39;rarrot&#39;</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> a4</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> {} </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#E1E4E8;">a3.name </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;1&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 报错，不可以进行添加属性或者对属性进行重新赋值</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 大写object</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> a</span><span style="color:#D73A49;">:</span><span style="color:#6F42C1;">Object</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">123</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> a1</span><span style="color:#D73A49;">:</span><span style="color:#6F42C1;">Object</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;123&quot;</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> a2</span><span style="color:#D73A49;">:</span><span style="color:#6F42C1;">Object</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">[]</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> a3</span><span style="color:#D73A49;">:</span><span style="color:#6F42C1;">Object</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{}</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> a4</span><span style="color:#D73A49;">:</span><span style="color:#6F42C1;">Object</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 小写object，仅支持引用类型，</span></span>
<span class="line"><span style="color:#6A737D;">// 所以可以通过object将引用类型筛选出来，常用于泛型约束</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> a</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">object</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">123</span><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 报错，原始类型</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> a1</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">object</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;123&quot;</span><span style="color:#24292E;">     </span><span style="color:#6A737D;">// 报错，原始类型</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> a2</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">object</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">false</span><span style="color:#24292E;">     </span><span style="color:#6A737D;">// 报错，原始类型</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> a3</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">object</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">[]        </span><span style="color:#6A737D;">// 正确</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> a4</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">object</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{}        </span><span style="color:#6A737D;">// 正确</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">a5</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">object</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">123</span><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 正确</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 可以将{}理解为一个new Object，相当于原始类型</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> a</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> {} </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">123</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> a1</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> {} </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;123&quot;</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> a2</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> {} </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> []</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> a3</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> {} </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> { name: </span><span style="color:#032F62;">&#39;rarrot&#39;</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> a4</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> {} </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">a3.name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;1&#39;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 报错，不可以进行添加属性或者对属性进行重新赋值</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div>`,4),e=[o];function c(r,t,y,E,i,b){return a(),n("div",null,e)}const u=s(p,[["render",c]]);export{A as __pageData,u as default};
